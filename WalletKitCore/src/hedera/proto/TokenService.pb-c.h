/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: TokenService.proto */

#ifndef PROTOBUF_C_TokenService_2eproto__INCLUDED
#define PROTOBUF_C_TokenService_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "Query.pb-c.h"
#include "Response.pb-c.h"
#include "TransactionResponse.pb-c.h"
#include "Transaction.pb-c.h"



/* --- enums --- */


/* --- messages --- */

/* --- per-message closures --- */


/* --- services --- */

typedef struct Proto__TokenService_Service Proto__TokenService_Service;
struct Proto__TokenService_Service
{
  ProtobufCService base;
  void (*create_token)(Proto__TokenService_Service *service,
                       const Proto__Transaction *input,
                       Proto__TransactionResponse_Closure closure,
                       void *closure_data);
  void (*update_token)(Proto__TokenService_Service *service,
                       const Proto__Transaction *input,
                       Proto__TransactionResponse_Closure closure,
                       void *closure_data);
  void (*mint_token)(Proto__TokenService_Service *service,
                     const Proto__Transaction *input,
                     Proto__TransactionResponse_Closure closure,
                     void *closure_data);
  void (*burn_token)(Proto__TokenService_Service *service,
                     const Proto__Transaction *input,
                     Proto__TransactionResponse_Closure closure,
                     void *closure_data);
  void (*delete_token)(Proto__TokenService_Service *service,
                       const Proto__Transaction *input,
                       Proto__TransactionResponse_Closure closure,
                       void *closure_data);
  void (*wipe_token_account)(Proto__TokenService_Service *service,
                             const Proto__Transaction *input,
                             Proto__TransactionResponse_Closure closure,
                             void *closure_data);
  void (*freeze_token_account)(Proto__TokenService_Service *service,
                               const Proto__Transaction *input,
                               Proto__TransactionResponse_Closure closure,
                               void *closure_data);
  void (*unfreeze_token_account)(Proto__TokenService_Service *service,
                                 const Proto__Transaction *input,
                                 Proto__TransactionResponse_Closure closure,
                                 void *closure_data);
  void (*grant_kyc_to_token_account)(Proto__TokenService_Service *service,
                                     const Proto__Transaction *input,
                                     Proto__TransactionResponse_Closure closure,
                                     void *closure_data);
  void (*revoke_kyc_from_token_account)(Proto__TokenService_Service *service,
                                        const Proto__Transaction *input,
                                        Proto__TransactionResponse_Closure closure,
                                        void *closure_data);
  void (*associate_tokens)(Proto__TokenService_Service *service,
                           const Proto__Transaction *input,
                           Proto__TransactionResponse_Closure closure,
                           void *closure_data);
  void (*dissociate_tokens)(Proto__TokenService_Service *service,
                            const Proto__Transaction *input,
                            Proto__TransactionResponse_Closure closure,
                            void *closure_data);
  void (*update_token_fee_schedule)(Proto__TokenService_Service *service,
                                    const Proto__Transaction *input,
                                    Proto__TransactionResponse_Closure closure,
                                    void *closure_data);
  void (*get_token_info)(Proto__TokenService_Service *service,
                         const Proto__Query *input,
                         Proto__Response_Closure closure,
                         void *closure_data);
  void (*get_account_nft_infos)(Proto__TokenService_Service *service,
                                const Proto__Query *input,
                                Proto__Response_Closure closure,
                                void *closure_data);
  void (*get_token_nft_info)(Proto__TokenService_Service *service,
                             const Proto__Query *input,
                             Proto__Response_Closure closure,
                             void *closure_data);
  void (*get_token_nft_infos)(Proto__TokenService_Service *service,
                              const Proto__Query *input,
                              Proto__Response_Closure closure,
                              void *closure_data);
};
typedef void (*Proto__TokenService_ServiceDestroy)(Proto__TokenService_Service *);
void proto__token_service__init (Proto__TokenService_Service *service,
                                 Proto__TokenService_ServiceDestroy destroy);
#define PROTO__TOKEN_SERVICE__BASE_INIT \
    { &proto__token_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define PROTO__TOKEN_SERVICE__INIT(function_prefix__) \
    { PROTO__TOKEN_SERVICE__BASE_INIT,\
      function_prefix__ ## create_token,\
      function_prefix__ ## update_token,\
      function_prefix__ ## mint_token,\
      function_prefix__ ## burn_token,\
      function_prefix__ ## delete_token,\
      function_prefix__ ## wipe_token_account,\
      function_prefix__ ## freeze_token_account,\
      function_prefix__ ## unfreeze_token_account,\
      function_prefix__ ## grant_kyc_to_token_account,\
      function_prefix__ ## revoke_kyc_from_token_account,\
      function_prefix__ ## associate_tokens,\
      function_prefix__ ## dissociate_tokens,\
      function_prefix__ ## update_token_fee_schedule,\
      function_prefix__ ## get_token_info,\
      function_prefix__ ## get_account_nft_infos,\
      function_prefix__ ## get_token_nft_info,\
      function_prefix__ ## get_token_nft_infos  }
void proto__token_service__create_token(ProtobufCService *service,
                                        const Proto__Transaction *input,
                                        Proto__TransactionResponse_Closure closure,
                                        void *closure_data);
void proto__token_service__update_token(ProtobufCService *service,
                                        const Proto__Transaction *input,
                                        Proto__TransactionResponse_Closure closure,
                                        void *closure_data);
void proto__token_service__mint_token(ProtobufCService *service,
                                      const Proto__Transaction *input,
                                      Proto__TransactionResponse_Closure closure,
                                      void *closure_data);
void proto__token_service__burn_token(ProtobufCService *service,
                                      const Proto__Transaction *input,
                                      Proto__TransactionResponse_Closure closure,
                                      void *closure_data);
void proto__token_service__delete_token(ProtobufCService *service,
                                        const Proto__Transaction *input,
                                        Proto__TransactionResponse_Closure closure,
                                        void *closure_data);
void proto__token_service__wipe_token_account(ProtobufCService *service,
                                              const Proto__Transaction *input,
                                              Proto__TransactionResponse_Closure closure,
                                              void *closure_data);
void proto__token_service__freeze_token_account(ProtobufCService *service,
                                                const Proto__Transaction *input,
                                                Proto__TransactionResponse_Closure closure,
                                                void *closure_data);
void proto__token_service__unfreeze_token_account(ProtobufCService *service,
                                                  const Proto__Transaction *input,
                                                  Proto__TransactionResponse_Closure closure,
                                                  void *closure_data);
void proto__token_service__grant_kyc_to_token_account(ProtobufCService *service,
                                                      const Proto__Transaction *input,
                                                      Proto__TransactionResponse_Closure closure,
                                                      void *closure_data);
void proto__token_service__revoke_kyc_from_token_account(ProtobufCService *service,
                                                         const Proto__Transaction *input,
                                                         Proto__TransactionResponse_Closure closure,
                                                         void *closure_data);
void proto__token_service__associate_tokens(ProtobufCService *service,
                                            const Proto__Transaction *input,
                                            Proto__TransactionResponse_Closure closure,
                                            void *closure_data);
void proto__token_service__dissociate_tokens(ProtobufCService *service,
                                             const Proto__Transaction *input,
                                             Proto__TransactionResponse_Closure closure,
                                             void *closure_data);
void proto__token_service__update_token_fee_schedule(ProtobufCService *service,
                                                     const Proto__Transaction *input,
                                                     Proto__TransactionResponse_Closure closure,
                                                     void *closure_data);
void proto__token_service__get_token_info(ProtobufCService *service,
                                          const Proto__Query *input,
                                          Proto__Response_Closure closure,
                                          void *closure_data);
void proto__token_service__get_account_nft_infos(ProtobufCService *service,
                                                 const Proto__Query *input,
                                                 Proto__Response_Closure closure,
                                                 void *closure_data);
void proto__token_service__get_token_nft_info(ProtobufCService *service,
                                              const Proto__Query *input,
                                              Proto__Response_Closure closure,
                                              void *closure_data);
void proto__token_service__get_token_nft_infos(ProtobufCService *service,
                                               const Proto__Query *input,
                                               Proto__Response_Closure closure,
                                               void *closure_data);

/* --- descriptors --- */

extern const ProtobufCServiceDescriptor proto__token_service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_TokenService_2eproto__INCLUDED */
