/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: TokenDissociate.proto */

#ifndef PROTOBUF_C_TokenDissociate_2eproto__INCLUDED
#define PROTOBUF_C_TokenDissociate_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "BasicTypes.pb-c.h"

typedef struct Proto__TokenDissociateTransactionBody Proto__TokenDissociateTransactionBody;


/* --- enums --- */


/* --- messages --- */

/*
 * Dissociates the provided account with the provided tokens. Must be signed by the provided Account's key.
 *If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.
 *If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.
 *If any of the provided tokens is not found, the transaction will resolve to INVALID_TOKEN_REF.
 *If any of the provided tokens has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.
 *If an association between the provided account and any of the tokens does not exist, the transaction will resolve to TOKEN_NOT_ASSOCIATED_TO_ACCOUNT.
 *If a token has not been deleted and has not expired, and the user has a nonzero balance, the transaction will resolve to TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES.
 *If a <b>fungible token</b> has expired, the user can disassociate even if their token balance is not zero.
 *If a <b>non fungible token</b> has expired, the user can <b>not</b> disassociate if their token balance is not zero. The transaction will resolve to TRANSACTION_REQUIRED_ZERO_TOKEN_BALANCES.
 *On success, associations between the provided account and tokens are removed.
 */
struct  Proto__TokenDissociateTransactionBody
{
  ProtobufCMessage base;
  /*
   * The account to be dissociated with the provided tokens
   */
  Proto__AccountID *account;
  /*
   * The tokens to be dissociated with the provided account
   */
  size_t n_tokens;
  Proto__TokenID **tokens;
};
#define PROTO__TOKEN_DISSOCIATE_TRANSACTION_BODY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__token_dissociate_transaction_body__descriptor) \
    , NULL, 0,NULL }


/* Proto__TokenDissociateTransactionBody methods */
void   proto__token_dissociate_transaction_body__init
                     (Proto__TokenDissociateTransactionBody         *message);
size_t proto__token_dissociate_transaction_body__get_packed_size
                     (const Proto__TokenDissociateTransactionBody   *message);
size_t proto__token_dissociate_transaction_body__pack
                     (const Proto__TokenDissociateTransactionBody   *message,
                      uint8_t             *out);
size_t proto__token_dissociate_transaction_body__pack_to_buffer
                     (const Proto__TokenDissociateTransactionBody   *message,
                      ProtobufCBuffer     *buffer);
Proto__TokenDissociateTransactionBody *
       proto__token_dissociate_transaction_body__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__token_dissociate_transaction_body__free_unpacked
                     (Proto__TokenDissociateTransactionBody *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Proto__TokenDissociateTransactionBody_Closure)
                 (const Proto__TokenDissociateTransactionBody *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor proto__token_dissociate_transaction_body__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_TokenDissociate_2eproto__INCLUDED */
