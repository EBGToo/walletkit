/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ContractUpdate.proto */

#ifndef PROTOBUF_C_ContractUpdate_2eproto__INCLUDED
#define PROTOBUF_C_ContractUpdate_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "BasicTypes.pb-c.h"
#include "Duration.pb-c.h"
#include "Timestamp.pb-c.h"
#include "wrappers.pb-c.h"

typedef struct Proto__ContractUpdateTransactionBody Proto__ContractUpdateTransactionBody;


/* --- enums --- */


/* --- messages --- */

typedef enum {
  PROTO__CONTRACT_UPDATE_TRANSACTION_BODY__MEMO_FIELD__NOT_SET = 0,
  PROTO__CONTRACT_UPDATE_TRANSACTION_BODY__MEMO_FIELD_MEMO = 9,
  PROTO__CONTRACT_UPDATE_TRANSACTION_BODY__MEMO_FIELD_MEMO_WRAPPER = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PROTO__CONTRACT_UPDATE_TRANSACTION_BODY__MEMO_FIELD__CASE)
} Proto__ContractUpdateTransactionBody__MemoFieldCase;

/*
 *At consensus, updates the fields of a smart contract to the given values.
 *If no value is given for a field, that field is left unchanged on the contract. For an immutable smart contract (that is, a contract created without an adminKey), only the expirationTime may be updated; setting any other field in this case will cause the transaction status to resolve to MODIFYING_IMMUTABLE_CONTRACT.
 *--- Signing Requirements ---
 *1. Whether or not a contract has an admin Key, its expiry can be extended with only the transaction payer's signature.
 *2. Updating any other field of a mutable contract requires the admin key's signature.
 *3. If the update transaction includes a new admin key, this new key must also sign <b>unless</b> it is exactly an empty <tt>KeyList</tt>. This special sentinel key removes the existing admin key and causes the contract to become immutable. (Other <tt>Key</tt> structures without a constituent <tt>Ed25519</tt> key will be rejected with <tt>INVALID_ADMIN_KEY</tt>.) 
 */
struct  Proto__ContractUpdateTransactionBody
{
  ProtobufCMessage base;
  /*
   * The id of the contract to be updated
   */
  Proto__ContractID *contractid;
  /*
   * The new expiry of the contract, no earlier than the current expiry (resolves to EXPIRATION_REDUCTION_NOT_ALLOWED otherwise)
   */
  Proto__Timestamp *expirationtime;
  /*
   * The new key to control updates to the contract
   */
  Proto__Key *adminkey;
  /*
   * (NOT YET IMPLEMENTED) The new id of the account to which the contract is proxy staked
   */
  Proto__AccountID *proxyaccountid;
  /*
   * (NOT YET IMPLEMENTED) The new interval at which the contract will pay to extend its expiry (by the same interval)
   */
  Proto__Duration *autorenewperiod;
  /*
   * The new id of the file asserted to contain the bytecode of the Solidity transaction that created this contract
   */
  Proto__FileID *fileid;
  Proto__ContractUpdateTransactionBody__MemoFieldCase memo_field_case;
  union {
    /*
     * [Deprecated] If set with a non-zero length, the new memo to be associated with the account (UTF-8 encoding max 100 bytes)
     */
    char *memo PROTOBUF_C__DEPRECATED;
    /*
     * If set, the new memo to be associated with the account (UTF-8 encoding max 100 bytes)
     */
    Google__Protobuf__StringValue *memowrapper;
  };
};
#define PROTO__CONTRACT_UPDATE_TRANSACTION_BODY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__contract_update_transaction_body__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, PROTO__CONTRACT_UPDATE_TRANSACTION_BODY__MEMO_FIELD__NOT_SET, {0} }


/* Proto__ContractUpdateTransactionBody methods */
void   proto__contract_update_transaction_body__init
                     (Proto__ContractUpdateTransactionBody         *message);
size_t proto__contract_update_transaction_body__get_packed_size
                     (const Proto__ContractUpdateTransactionBody   *message);
size_t proto__contract_update_transaction_body__pack
                     (const Proto__ContractUpdateTransactionBody   *message,
                      uint8_t             *out);
size_t proto__contract_update_transaction_body__pack_to_buffer
                     (const Proto__ContractUpdateTransactionBody   *message,
                      ProtobufCBuffer     *buffer);
Proto__ContractUpdateTransactionBody *
       proto__contract_update_transaction_body__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__contract_update_transaction_body__free_unpacked
                     (Proto__ContractUpdateTransactionBody *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Proto__ContractUpdateTransactionBody_Closure)
                 (const Proto__ContractUpdateTransactionBody *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor proto__contract_update_transaction_body__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ContractUpdate_2eproto__INCLUDED */
