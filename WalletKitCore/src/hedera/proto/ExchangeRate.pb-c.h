/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ExchangeRate.proto */

#ifndef PROTOBUF_C_ExchangeRate_2eproto__INCLUDED
#define PROTOBUF_C_ExchangeRate_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "Timestamp.pb-c.h"

typedef struct Proto__ExchangeRate Proto__ExchangeRate;
typedef struct Proto__ExchangeRateSet Proto__ExchangeRateSet;


/* --- enums --- */


/* --- messages --- */

/*
 *An exchange rate between hbar and cents (USD) and the time at which the exchange rate will expire, and be superseded by a new exchange rate.
 */
struct  Proto__ExchangeRate
{
  ProtobufCMessage base;
  /*
   * Denominator in calculation of exchange rate between hbar and cents
   */
  int32_t hbarequiv;
  /*
   * Numerator in calculation of exchange rate between hbar and cents
   */
  int32_t centequiv;
  /*
   * Expiration time in seconds for this exchange rate
   */
  Proto__TimestampSeconds *expirationtime;
};
#define PROTO__EXCHANGE_RATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__exchange_rate__descriptor) \
    , 0, 0, NULL }


/*
 * Two sets of exchange rates 
 */
struct  Proto__ExchangeRateSet
{
  ProtobufCMessage base;
  /*
   * Current exchange rate
   */
  Proto__ExchangeRate *currentrate;
  /*
   * Next exchange rate which will take effect when current rate expires
   */
  Proto__ExchangeRate *nextrate;
};
#define PROTO__EXCHANGE_RATE_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__exchange_rate_set__descriptor) \
    , NULL, NULL }


/* Proto__ExchangeRate methods */
void   proto__exchange_rate__init
                     (Proto__ExchangeRate         *message);
size_t proto__exchange_rate__get_packed_size
                     (const Proto__ExchangeRate   *message);
size_t proto__exchange_rate__pack
                     (const Proto__ExchangeRate   *message,
                      uint8_t             *out);
size_t proto__exchange_rate__pack_to_buffer
                     (const Proto__ExchangeRate   *message,
                      ProtobufCBuffer     *buffer);
Proto__ExchangeRate *
       proto__exchange_rate__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__exchange_rate__free_unpacked
                     (Proto__ExchangeRate *message,
                      ProtobufCAllocator *allocator);
/* Proto__ExchangeRateSet methods */
void   proto__exchange_rate_set__init
                     (Proto__ExchangeRateSet         *message);
size_t proto__exchange_rate_set__get_packed_size
                     (const Proto__ExchangeRateSet   *message);
size_t proto__exchange_rate_set__pack
                     (const Proto__ExchangeRateSet   *message,
                      uint8_t             *out);
size_t proto__exchange_rate_set__pack_to_buffer
                     (const Proto__ExchangeRateSet   *message,
                      ProtobufCBuffer     *buffer);
Proto__ExchangeRateSet *
       proto__exchange_rate_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__exchange_rate_set__free_unpacked
                     (Proto__ExchangeRateSet *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Proto__ExchangeRate_Closure)
                 (const Proto__ExchangeRate *message,
                  void *closure_data);
typedef void (*Proto__ExchangeRateSet_Closure)
                 (const Proto__ExchangeRateSet *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor proto__exchange_rate__descriptor;
extern const ProtobufCMessageDescriptor proto__exchange_rate_set__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ExchangeRate_2eproto__INCLUDED */
