/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: CryptoDelete.proto */

#ifndef PROTOBUF_C_CryptoDelete_2eproto__INCLUDED
#define PROTOBUF_C_CryptoDelete_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "BasicTypes.pb-c.h"

typedef struct Proto__CryptoDeleteTransactionBody Proto__CryptoDeleteTransactionBody;


/* --- enums --- */


/* --- messages --- */

/*
 * Mark an account as deleted, moving all its current hbars to another account. It will remain in the ledger, marked as deleted, until it expires. Transfers into it a deleted account fail. But a deleted account can still have its expiration extended in the normal way. 
 */
struct  Proto__CryptoDeleteTransactionBody
{
  ProtobufCMessage base;
  /*
   * The account ID which will receive all remaining hbars
   */
  Proto__AccountID *transferaccountid;
  /*
   * The account ID which should be deleted
   */
  Proto__AccountID *deleteaccountid;
};
#define PROTO__CRYPTO_DELETE_TRANSACTION_BODY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__crypto_delete_transaction_body__descriptor) \
    , NULL, NULL }


/* Proto__CryptoDeleteTransactionBody methods */
void   proto__crypto_delete_transaction_body__init
                     (Proto__CryptoDeleteTransactionBody         *message);
size_t proto__crypto_delete_transaction_body__get_packed_size
                     (const Proto__CryptoDeleteTransactionBody   *message);
size_t proto__crypto_delete_transaction_body__pack
                     (const Proto__CryptoDeleteTransactionBody   *message,
                      uint8_t             *out);
size_t proto__crypto_delete_transaction_body__pack_to_buffer
                     (const Proto__CryptoDeleteTransactionBody   *message,
                      ProtobufCBuffer     *buffer);
Proto__CryptoDeleteTransactionBody *
       proto__crypto_delete_transaction_body__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__crypto_delete_transaction_body__free_unpacked
                     (Proto__CryptoDeleteTransactionBody *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Proto__CryptoDeleteTransactionBody_Closure)
                 (const Proto__CryptoDeleteTransactionBody *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor proto__crypto_delete_transaction_body__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_CryptoDelete_2eproto__INCLUDED */
