/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: CryptoUpdate.proto */

#ifndef PROTOBUF_C_CryptoUpdate_2eproto__INCLUDED
#define PROTOBUF_C_CryptoUpdate_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "BasicTypes.pb-c.h"
#include "Duration.pb-c.h"
#include "Timestamp.pb-c.h"
#include "wrappers.pb-c.h"

typedef struct Proto__CryptoUpdateTransactionBody Proto__CryptoUpdateTransactionBody;


/* --- enums --- */


/* --- messages --- */

typedef enum {
  PROTO__CRYPTO_UPDATE_TRANSACTION_BODY__SEND_RECORD_THRESHOLD_FIELD__NOT_SET = 0,
  PROTO__CRYPTO_UPDATE_TRANSACTION_BODY__SEND_RECORD_THRESHOLD_FIELD_SEND_RECORD_THRESHOLD = 6,
  PROTO__CRYPTO_UPDATE_TRANSACTION_BODY__SEND_RECORD_THRESHOLD_FIELD_SEND_RECORD_THRESHOLD_WRAPPER = 11
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PROTO__CRYPTO_UPDATE_TRANSACTION_BODY__SEND_RECORD_THRESHOLD_FIELD__CASE)
} Proto__CryptoUpdateTransactionBody__SendRecordThresholdFieldCase;

typedef enum {
  PROTO__CRYPTO_UPDATE_TRANSACTION_BODY__RECEIVE_RECORD_THRESHOLD_FIELD__NOT_SET = 0,
  PROTO__CRYPTO_UPDATE_TRANSACTION_BODY__RECEIVE_RECORD_THRESHOLD_FIELD_RECEIVE_RECORD_THRESHOLD = 7,
  PROTO__CRYPTO_UPDATE_TRANSACTION_BODY__RECEIVE_RECORD_THRESHOLD_FIELD_RECEIVE_RECORD_THRESHOLD_WRAPPER = 12
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PROTO__CRYPTO_UPDATE_TRANSACTION_BODY__RECEIVE_RECORD_THRESHOLD_FIELD__CASE)
} Proto__CryptoUpdateTransactionBody__ReceiveRecordThresholdFieldCase;

typedef enum {
  PROTO__CRYPTO_UPDATE_TRANSACTION_BODY__RECEIVER_SIG_REQUIRED_FIELD__NOT_SET = 0,
  PROTO__CRYPTO_UPDATE_TRANSACTION_BODY__RECEIVER_SIG_REQUIRED_FIELD_RECEIVER_SIG_REQUIRED = 10,
  PROTO__CRYPTO_UPDATE_TRANSACTION_BODY__RECEIVER_SIG_REQUIRED_FIELD_RECEIVER_SIG_REQUIRED_WRAPPER = 13
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PROTO__CRYPTO_UPDATE_TRANSACTION_BODY__RECEIVER_SIG_REQUIRED_FIELD__CASE)
} Proto__CryptoUpdateTransactionBody__ReceiverSigRequiredFieldCase;

/*
 *Change properties for the given account. Any null field is ignored (left unchanged). This transaction must be signed by the existing key for this account. If the transaction is changing the key field, then the transaction must be signed by both the old key (from before the change) and the new key. The old key must sign for security. The new key must sign as a safeguard to avoid accidentally changing to an invalid key, and then having no way to recover.
 */
struct  Proto__CryptoUpdateTransactionBody
{
  ProtobufCMessage base;
  /*
   * The account ID which is being updated in this transaction
   */
  Proto__AccountID *accountidtoupdate;
  /*
   * The new key
   */
  Proto__Key *key;
  /*
   * ID of the account to which this account is proxy staked. If proxyAccountID is null, or is an invalid account, or is an account that isn't a node, then this account is automatically proxy staked to a node chosen by the network, but without earning payments. If the proxyAccountID account refuses to accept proxy staking , or if it is not currently running a node, then it will behave as if proxyAccountID was null.
   */
  Proto__AccountID *proxyaccountid;
  /*
   * [Deprecated]. Payments earned from proxy staking are shared between the node and this account, with proxyFraction / 10000 going to this account
   */
  int32_t proxyfraction PROTOBUF_C__DEPRECATED;
  /*
   * The duration in which it will automatically extend the expiration period. If it doesn't have enough balance, it extends as long as possible. If it is empty when it expires, then it is deleted.
   */
  Proto__Duration *autorenewperiod;
  /*
   * The new expiration time to extend to (ignored if equal to or before the current one)
   */
  Proto__Timestamp *expirationtime;
  /*
   * If set, the new memo to be associated with the account (UTF-8 encoding max 100 bytes)
   */
  Google__Protobuf__StringValue *memo;
  Proto__CryptoUpdateTransactionBody__SendRecordThresholdFieldCase send_record_threshold_field_case;
  union {
    /*
     * [Deprecated]. The new threshold amount (in tinybars) for which an account record is created for any send/withdraw transaction
     */
    uint64_t sendrecordthreshold PROTOBUF_C__DEPRECATED;
    /*
     * [Deprecated]. The new threshold amount (in tinybars) for which an account record is created for any send/withdraw transaction
     */
    Google__Protobuf__UInt64Value *sendrecordthresholdwrapper PROTOBUF_C__DEPRECATED;
  };
  Proto__CryptoUpdateTransactionBody__ReceiveRecordThresholdFieldCase receive_record_threshold_field_case;
  union {
    /*
     * [Deprecated]. The new threshold amount (in tinybars) for which an account record is created for any receive/deposit transaction.
     */
    uint64_t receiverecordthreshold PROTOBUF_C__DEPRECATED;
    /*
     * [Deprecated]. The new threshold amount (in tinybars) for which an account record is created for any receive/deposit transaction.
     */
    Google__Protobuf__UInt64Value *receiverecordthresholdwrapper PROTOBUF_C__DEPRECATED;
  };
  Proto__CryptoUpdateTransactionBody__ReceiverSigRequiredFieldCase receiver_sig_required_field_case;
  union {
    /*
     * [Deprecated] Do NOT use this field to set a false value because the server cannot distinguish from the default value. Use receiverSigRequiredWrapper field for this purpose.
     */
    protobuf_c_boolean receiversigrequired PROTOBUF_C__DEPRECATED;
    /*
     * If true, this account's key must sign any transaction depositing into this account (in addition to all withdrawals)
     */
    Google__Protobuf__BoolValue *receiversigrequiredwrapper;
  };
};
#define PROTO__CRYPTO_UPDATE_TRANSACTION_BODY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__crypto_update_transaction_body__descriptor) \
    , NULL, NULL, NULL, 0, NULL, NULL, NULL, PROTO__CRYPTO_UPDATE_TRANSACTION_BODY__SEND_RECORD_THRESHOLD_FIELD__NOT_SET, {0}, PROTO__CRYPTO_UPDATE_TRANSACTION_BODY__RECEIVE_RECORD_THRESHOLD_FIELD__NOT_SET, {0}, PROTO__CRYPTO_UPDATE_TRANSACTION_BODY__RECEIVER_SIG_REQUIRED_FIELD__NOT_SET, {0} }


/* Proto__CryptoUpdateTransactionBody methods */
void   proto__crypto_update_transaction_body__init
                     (Proto__CryptoUpdateTransactionBody         *message);
size_t proto__crypto_update_transaction_body__get_packed_size
                     (const Proto__CryptoUpdateTransactionBody   *message);
size_t proto__crypto_update_transaction_body__pack
                     (const Proto__CryptoUpdateTransactionBody   *message,
                      uint8_t             *out);
size_t proto__crypto_update_transaction_body__pack_to_buffer
                     (const Proto__CryptoUpdateTransactionBody   *message,
                      ProtobufCBuffer     *buffer);
Proto__CryptoUpdateTransactionBody *
       proto__crypto_update_transaction_body__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__crypto_update_transaction_body__free_unpacked
                     (Proto__CryptoUpdateTransactionBody *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Proto__CryptoUpdateTransactionBody_Closure)
                 (const Proto__CryptoUpdateTransactionBody *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor proto__crypto_update_transaction_body__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_CryptoUpdate_2eproto__INCLUDED */
