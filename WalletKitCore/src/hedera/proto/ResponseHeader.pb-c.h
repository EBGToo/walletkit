/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ResponseHeader.proto */

#ifndef PROTOBUF_C_ResponseHeader_2eproto__INCLUDED
#define PROTOBUF_C_ResponseHeader_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "TransactionResponse.pb-c.h"
#include "QueryHeader.pb-c.h"
#include "ResponseCode.pb-c.h"

typedef struct Proto__ResponseHeader Proto__ResponseHeader;


/* --- enums --- */


/* --- messages --- */

/*
 * Every query receives a response containing the QueryResponseHeader. Either or both of the cost and stateProof fields may be blank, if the responseType didn't ask for the cost or stateProof. 
 */
struct  Proto__ResponseHeader
{
  ProtobufCMessage base;
  /*
   * Result of fee transaction precheck, saying it passed, or why it failed
   */
  Proto__ResponseCodeEnum nodetransactionprecheckcode;
  /*
   * The requested response is repeated back here, for convenience
   */
  Proto__ResponseType responsetype;
  /*
   * The fee that would be charged to get the requested information (if a cost was requested). Note: This cost only includes the query fee and does not include the transfer fee(which is required to execute the transfer transaction to debit the payer account and credit the node account with query fee)
   */
  uint64_t cost;
  /*
   * The state proof for this information (if a state proof was requested, and is available)
   */
  ProtobufCBinaryData stateproof;
};
#define PROTO__RESPONSE_HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__response_header__descriptor) \
    , PROTO__RESPONSE_CODE_ENUM__OK, PROTO__RESPONSE_TYPE__ANSWER_ONLY, 0, {0,NULL} }


/* Proto__ResponseHeader methods */
void   proto__response_header__init
                     (Proto__ResponseHeader         *message);
size_t proto__response_header__get_packed_size
                     (const Proto__ResponseHeader   *message);
size_t proto__response_header__pack
                     (const Proto__ResponseHeader   *message,
                      uint8_t             *out);
size_t proto__response_header__pack_to_buffer
                     (const Proto__ResponseHeader   *message,
                      ProtobufCBuffer     *buffer);
Proto__ResponseHeader *
       proto__response_header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__response_header__free_unpacked
                     (Proto__ResponseHeader *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Proto__ResponseHeader_Closure)
                 (const Proto__ResponseHeader *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor proto__response_header__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ResponseHeader_2eproto__INCLUDED */
