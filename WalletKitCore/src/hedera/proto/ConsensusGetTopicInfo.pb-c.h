/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ConsensusGetTopicInfo.proto */

#ifndef PROTOBUF_C_ConsensusGetTopicInfo_2eproto__INCLUDED
#define PROTOBUF_C_ConsensusGetTopicInfo_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "BasicTypes.pb-c.h"
#include "QueryHeader.pb-c.h"
#include "ResponseHeader.pb-c.h"
#include "ConsensusTopicInfo.pb-c.h"

typedef struct Proto__ConsensusGetTopicInfoQuery Proto__ConsensusGetTopicInfoQuery;
typedef struct Proto__ConsensusGetTopicInfoResponse Proto__ConsensusGetTopicInfoResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * See [ConsensusService.getTopicInfo()](#proto.ConsensusService)
 */
struct  Proto__ConsensusGetTopicInfoQuery
{
  ProtobufCMessage base;
  /*
   * Standard info sent from client to node, including the signed payment, and what kind of response is requested
   * (cost, state proof, both, or neither).
   */
  Proto__QueryHeader *header;
  /*
   * The Topic for which information is being requested
   */
  Proto__TopicID *topicid;
};
#define PROTO__CONSENSUS_GET_TOPIC_INFO_QUERY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__consensus_get_topic_info_query__descriptor) \
    , NULL, NULL }


/*
 * Retrieve the parameters of and state of a consensus topic.
 */
struct  Proto__ConsensusGetTopicInfoResponse
{
  ProtobufCMessage base;
  /*
   * Standard response from node to client, including the requested fields: cost, or state proof, or both, or neither.
   */
  Proto__ResponseHeader *header;
  /*
   * Topic identifier.
   */
  Proto__TopicID *topicid;
  /*
   * Current state of the topic
   */
  Proto__ConsensusTopicInfo *topicinfo;
};
#define PROTO__CONSENSUS_GET_TOPIC_INFO_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__consensus_get_topic_info_response__descriptor) \
    , NULL, NULL, NULL }


/* Proto__ConsensusGetTopicInfoQuery methods */
void   proto__consensus_get_topic_info_query__init
                     (Proto__ConsensusGetTopicInfoQuery         *message);
size_t proto__consensus_get_topic_info_query__get_packed_size
                     (const Proto__ConsensusGetTopicInfoQuery   *message);
size_t proto__consensus_get_topic_info_query__pack
                     (const Proto__ConsensusGetTopicInfoQuery   *message,
                      uint8_t             *out);
size_t proto__consensus_get_topic_info_query__pack_to_buffer
                     (const Proto__ConsensusGetTopicInfoQuery   *message,
                      ProtobufCBuffer     *buffer);
Proto__ConsensusGetTopicInfoQuery *
       proto__consensus_get_topic_info_query__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__consensus_get_topic_info_query__free_unpacked
                     (Proto__ConsensusGetTopicInfoQuery *message,
                      ProtobufCAllocator *allocator);
/* Proto__ConsensusGetTopicInfoResponse methods */
void   proto__consensus_get_topic_info_response__init
                     (Proto__ConsensusGetTopicInfoResponse         *message);
size_t proto__consensus_get_topic_info_response__get_packed_size
                     (const Proto__ConsensusGetTopicInfoResponse   *message);
size_t proto__consensus_get_topic_info_response__pack
                     (const Proto__ConsensusGetTopicInfoResponse   *message,
                      uint8_t             *out);
size_t proto__consensus_get_topic_info_response__pack_to_buffer
                     (const Proto__ConsensusGetTopicInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
Proto__ConsensusGetTopicInfoResponse *
       proto__consensus_get_topic_info_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__consensus_get_topic_info_response__free_unpacked
                     (Proto__ConsensusGetTopicInfoResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Proto__ConsensusGetTopicInfoQuery_Closure)
                 (const Proto__ConsensusGetTopicInfoQuery *message,
                  void *closure_data);
typedef void (*Proto__ConsensusGetTopicInfoResponse_Closure)
                 (const Proto__ConsensusGetTopicInfoResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor proto__consensus_get_topic_info_query__descriptor;
extern const ProtobufCMessageDescriptor proto__consensus_get_topic_info_response__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ConsensusGetTopicInfo_2eproto__INCLUDED */
