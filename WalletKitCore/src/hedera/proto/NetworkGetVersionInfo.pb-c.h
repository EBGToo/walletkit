/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: NetworkGetVersionInfo.proto */

#ifndef PROTOBUF_C_NetworkGetVersionInfo_2eproto__INCLUDED
#define PROTOBUF_C_NetworkGetVersionInfo_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "BasicTypes.pb-c.h"
#include "QueryHeader.pb-c.h"
#include "ResponseHeader.pb-c.h"

typedef struct Proto__NetworkGetVersionInfoQuery Proto__NetworkGetVersionInfoQuery;
typedef struct Proto__NetworkGetVersionInfoResponse Proto__NetworkGetVersionInfoResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * Get the deployed versions of Hedera Services and the HAPI proto in semantic version format 
 */
struct  Proto__NetworkGetVersionInfoQuery
{
  ProtobufCMessage base;
  /*
   * Standard info sent from client to node, including the signed payment, and what kind of response is requested (cost, state proof, both, or neither).
   */
  Proto__QueryHeader *header;
};
#define PROTO__NETWORK_GET_VERSION_INFO_QUERY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__network_get_version_info_query__descriptor) \
    , NULL }


/*
 * Response when the client sends the node NetworkGetVersionInfoQuery 
 */
struct  Proto__NetworkGetVersionInfoResponse
{
  ProtobufCMessage base;
  /*
   * Standard response from node to client, including the requested fields: cost, or state proof, or both, or neither
   */
  Proto__ResponseHeader *header;
  /*
   * The Hedera API (HAPI) protobuf version recognized by the responding node.
   */
  Proto__SemanticVersion *hapiprotoversion;
  /*
   * The version of the Hedera Services software deployed on the responding node.
   */
  Proto__SemanticVersion *hederaservicesversion;
};
#define PROTO__NETWORK_GET_VERSION_INFO_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__network_get_version_info_response__descriptor) \
    , NULL, NULL, NULL }


/* Proto__NetworkGetVersionInfoQuery methods */
void   proto__network_get_version_info_query__init
                     (Proto__NetworkGetVersionInfoQuery         *message);
size_t proto__network_get_version_info_query__get_packed_size
                     (const Proto__NetworkGetVersionInfoQuery   *message);
size_t proto__network_get_version_info_query__pack
                     (const Proto__NetworkGetVersionInfoQuery   *message,
                      uint8_t             *out);
size_t proto__network_get_version_info_query__pack_to_buffer
                     (const Proto__NetworkGetVersionInfoQuery   *message,
                      ProtobufCBuffer     *buffer);
Proto__NetworkGetVersionInfoQuery *
       proto__network_get_version_info_query__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__network_get_version_info_query__free_unpacked
                     (Proto__NetworkGetVersionInfoQuery *message,
                      ProtobufCAllocator *allocator);
/* Proto__NetworkGetVersionInfoResponse methods */
void   proto__network_get_version_info_response__init
                     (Proto__NetworkGetVersionInfoResponse         *message);
size_t proto__network_get_version_info_response__get_packed_size
                     (const Proto__NetworkGetVersionInfoResponse   *message);
size_t proto__network_get_version_info_response__pack
                     (const Proto__NetworkGetVersionInfoResponse   *message,
                      uint8_t             *out);
size_t proto__network_get_version_info_response__pack_to_buffer
                     (const Proto__NetworkGetVersionInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
Proto__NetworkGetVersionInfoResponse *
       proto__network_get_version_info_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__network_get_version_info_response__free_unpacked
                     (Proto__NetworkGetVersionInfoResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Proto__NetworkGetVersionInfoQuery_Closure)
                 (const Proto__NetworkGetVersionInfoQuery *message,
                  void *closure_data);
typedef void (*Proto__NetworkGetVersionInfoResponse_Closure)
                 (const Proto__NetworkGetVersionInfoResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor proto__network_get_version_info_query__descriptor;
extern const ProtobufCMessageDescriptor proto__network_get_version_info_response__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_NetworkGetVersionInfo_2eproto__INCLUDED */
