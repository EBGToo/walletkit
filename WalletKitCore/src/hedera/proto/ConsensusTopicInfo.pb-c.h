/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ConsensusTopicInfo.proto */

#ifndef PROTOBUF_C_ConsensusTopicInfo_2eproto__INCLUDED
#define PROTOBUF_C_ConsensusTopicInfo_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "BasicTypes.pb-c.h"
#include "Duration.pb-c.h"
#include "Timestamp.pb-c.h"

typedef struct Proto__ConsensusTopicInfo Proto__ConsensusTopicInfo;


/* --- enums --- */


/* --- messages --- */

/*
 * Current state of a topic.
 */
struct  Proto__ConsensusTopicInfo
{
  ProtobufCMessage base;
  /*
   * The memo associated with the topic (UTF-8 encoding max 100 bytes)
   */
  char *memo;
  /*
   * When a topic is created, its running hash is initialized to 48 bytes of binary zeros.
   * For each submitted message, the topic's running hash is then updated to the output
   * of a particular SHA-384 digest whose input data include the previous running hash.
   * See the TransactionReceipt.proto documentation for an exact description of the
   * data included in the SHA-384 digest used for the update.
   */
  ProtobufCBinaryData runninghash;
  /*
   * Sequence number (starting at 1 for the first submitMessage) of messages on the topic.
   */
  uint64_t sequencenumber;
  /*
   * Effective consensus timestamp at (and after) which submitMessage calls will no longer succeed on the topic
   * and the topic will expire and after AUTORENEW_GRACE_PERIOD be automatically deleted.
   */
  Proto__Timestamp *expirationtime;
  /*
   * Access control for update/delete of the topic. Null if there is no key.
   */
  Proto__Key *adminkey;
  /*
   * Access control for ConsensusService.submitMessage. Null if there is no key.
   */
  Proto__Key *submitkey;
  /*
   * If an auto-renew account is specified, when the topic expires, its lifetime will be extended by up to this duration (depending on the solvency of the auto-renew account). If the auto-renew account has no funds at all, the topic will be deleted instead.
   */
  Proto__Duration *autorenewperiod;
  /*
   * The account, if any, to charge for automatic renewal of the topic's lifetime upon expiry.
   */
  Proto__AccountID *autorenewaccount;
};
#define PROTO__CONSENSUS_TOPIC_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__consensus_topic_info__descriptor) \
    , (char *)protobuf_c_empty_string, {0,NULL}, 0, NULL, NULL, NULL, NULL, NULL }


/* Proto__ConsensusTopicInfo methods */
void   proto__consensus_topic_info__init
                     (Proto__ConsensusTopicInfo         *message);
size_t proto__consensus_topic_info__get_packed_size
                     (const Proto__ConsensusTopicInfo   *message);
size_t proto__consensus_topic_info__pack
                     (const Proto__ConsensusTopicInfo   *message,
                      uint8_t             *out);
size_t proto__consensus_topic_info__pack_to_buffer
                     (const Proto__ConsensusTopicInfo   *message,
                      ProtobufCBuffer     *buffer);
Proto__ConsensusTopicInfo *
       proto__consensus_topic_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__consensus_topic_info__free_unpacked
                     (Proto__ConsensusTopicInfo *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Proto__ConsensusTopicInfo_Closure)
                 (const Proto__ConsensusTopicInfo *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor proto__consensus_topic_info__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ConsensusTopicInfo_2eproto__INCLUDED */
