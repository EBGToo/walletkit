/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: SystemDelete.proto */

#ifndef PROTOBUF_C_SystemDelete_2eproto__INCLUDED
#define PROTOBUF_C_SystemDelete_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "BasicTypes.pb-c.h"
#include "Timestamp.pb-c.h"

typedef struct Proto__SystemDeleteTransactionBody Proto__SystemDeleteTransactionBody;


/* --- enums --- */


/* --- messages --- */

typedef enum {
  PROTO__SYSTEM_DELETE_TRANSACTION_BODY__ID__NOT_SET = 0,
  PROTO__SYSTEM_DELETE_TRANSACTION_BODY__ID_FILE_ID = 1,
  PROTO__SYSTEM_DELETE_TRANSACTION_BODY__ID_CONTRACT_ID = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(PROTO__SYSTEM_DELETE_TRANSACTION_BODY__ID__CASE)
} Proto__SystemDeleteTransactionBody__IdCase;

/*
 *Delete a file or smart contract - can only be done with a Hedera administrative multisignature. When it is deleted, it immediately disappears from the system as seen by the user, but is still stored internally until the expiration time, at which time it is truly and permanently deleted. Until that time, it can be undeleted by the Hedera administrative multisignature. When a smart contract is deleted, the cryptocurrency account within it continues to exist, and is not affected by the expiration time here.
 */
struct  Proto__SystemDeleteTransactionBody
{
  ProtobufCMessage base;
  /*
   * The timestamp in seconds at which the "deleted" file should truly be permanently deleted
   */
  Proto__TimestampSeconds *expirationtime;
  Proto__SystemDeleteTransactionBody__IdCase id_case;
  union {
    /*
     * The file ID of the file to delete, in the format used in transactions
     */
    Proto__FileID *fileid;
    /*
     * The contract ID instance to delete, in the format used in transactions
     */
    Proto__ContractID *contractid;
  };
};
#define PROTO__SYSTEM_DELETE_TRANSACTION_BODY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__system_delete_transaction_body__descriptor) \
    , NULL, PROTO__SYSTEM_DELETE_TRANSACTION_BODY__ID__NOT_SET, {0} }


/* Proto__SystemDeleteTransactionBody methods */
void   proto__system_delete_transaction_body__init
                     (Proto__SystemDeleteTransactionBody         *message);
size_t proto__system_delete_transaction_body__get_packed_size
                     (const Proto__SystemDeleteTransactionBody   *message);
size_t proto__system_delete_transaction_body__pack
                     (const Proto__SystemDeleteTransactionBody   *message,
                      uint8_t             *out);
size_t proto__system_delete_transaction_body__pack_to_buffer
                     (const Proto__SystemDeleteTransactionBody   *message,
                      ProtobufCBuffer     *buffer);
Proto__SystemDeleteTransactionBody *
       proto__system_delete_transaction_body__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__system_delete_transaction_body__free_unpacked
                     (Proto__SystemDeleteTransactionBody *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Proto__SystemDeleteTransactionBody_Closure)
                 (const Proto__SystemDeleteTransactionBody *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor proto__system_delete_transaction_body__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_SystemDelete_2eproto__INCLUDED */
