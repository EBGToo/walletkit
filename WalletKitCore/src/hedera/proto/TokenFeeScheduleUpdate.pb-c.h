/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: TokenFeeScheduleUpdate.proto */

#ifndef PROTOBUF_C_TokenFeeScheduleUpdate_2eproto__INCLUDED
#define PROTOBUF_C_TokenFeeScheduleUpdate_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "BasicTypes.pb-c.h"
#include "CustomFees.pb-c.h"

typedef struct Proto__TokenFeeScheduleUpdateTransactionBody Proto__TokenFeeScheduleUpdateTransactionBody;


/* --- enums --- */


/* --- messages --- */

/*
 * At consensus, updates a token type's fee schedule to the given list of custom fees. 
 *If the target token type has no fee_schedule_key, resolves to TOKEN_HAS_NO_FEE_SCHEDULE_KEY.
 *Otherwise this transaction must be signed to the fee_schedule_key, or the transaction will 
 *resolve to INVALID_SIGNATURE.
 *If the custom_fees list is empty, clears the fee schedule or resolves to 
 *CUSTOM_SCHEDULE_ALREADY_HAS_NO_FEES if the fee schedule was already empty. 
 */
struct  Proto__TokenFeeScheduleUpdateTransactionBody
{
  ProtobufCMessage base;
  /*
   * The token whose fee schedule is to be updated
   */
  Proto__TokenID *token_id;
  /*
   * The new custom fees to be assessed during a CryptoTransfer that transfers units of this token
   */
  size_t n_custom_fees;
  Proto__CustomFee **custom_fees;
};
#define PROTO__TOKEN_FEE_SCHEDULE_UPDATE_TRANSACTION_BODY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__token_fee_schedule_update_transaction_body__descriptor) \
    , NULL, 0,NULL }


/* Proto__TokenFeeScheduleUpdateTransactionBody methods */
void   proto__token_fee_schedule_update_transaction_body__init
                     (Proto__TokenFeeScheduleUpdateTransactionBody         *message);
size_t proto__token_fee_schedule_update_transaction_body__get_packed_size
                     (const Proto__TokenFeeScheduleUpdateTransactionBody   *message);
size_t proto__token_fee_schedule_update_transaction_body__pack
                     (const Proto__TokenFeeScheduleUpdateTransactionBody   *message,
                      uint8_t             *out);
size_t proto__token_fee_schedule_update_transaction_body__pack_to_buffer
                     (const Proto__TokenFeeScheduleUpdateTransactionBody   *message,
                      ProtobufCBuffer     *buffer);
Proto__TokenFeeScheduleUpdateTransactionBody *
       proto__token_fee_schedule_update_transaction_body__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__token_fee_schedule_update_transaction_body__free_unpacked
                     (Proto__TokenFeeScheduleUpdateTransactionBody *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Proto__TokenFeeScheduleUpdateTransactionBody_Closure)
                 (const Proto__TokenFeeScheduleUpdateTransactionBody *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor proto__token_fee_schedule_update_transaction_body__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_TokenFeeScheduleUpdate_2eproto__INCLUDED */
